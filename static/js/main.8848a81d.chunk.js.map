{"version":3,"sources":["components/JobCard/Jobcard.js","components/Searchbar/Searchbar.js","containers/Home/Home.js","components/Navbar/Navbar.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["connect","dispatch","deleteRecent","item","type","value","props","react_default","a","createElement","className","showSkills","onClick","job","job_uuid","job_title","moment","date","format","skills","tags","i","push","key","skill_uuid","skill_name","skillTags","Searchbar","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","clearSearch","setState","search","suggestions","onChange","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","_this$setState","name","wrap","_context","prev","next","target","defineProperty","autocomplete","stop","_x","apply","arguments","_callee2","res","_context2","state","length","abrupt","Axios","concat","sent","data","showSuggestions","onKeyDown","_this$state","activeSuggestion","keyCode","selectSuggestion","values","suggestionList","_this$state2","id","map","suggestion","uuid","substr","_ref3","_callee3","_context3","console","log","objectSpread","saveRecent","_x2","onBlur","setTimeout","inherits","createClass","placeholder","autoComplete","Component","recent","jobs","reverse","components_Searchbar_Searchbar","components_JobCard_Jobcard","Navbar","role","aria-label","href","data-badge","App","components_Navbar_Navbar","BrowserRouter","Route","exact","path","component","Home","Boolean","window","location","hostname","match","initialState","reducer","undefined","action","filter","store","createStore","Reducer","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8848a81d.chunk.js","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\n\nimport \"./Jobcard.scss\";\n\nconst skillTags = skills => {\n  const tags = [];\n  for (let i = 0; i < 6; i++) {\n    tags.push(\n      <span key={skills[i].skill_uuid} className=\"tag is-info is-capitalized\">\n        {skills[i].skill_name}\n      </span>\n    );\n  }\n  return <div className=\"tags\">{tags}</div>;\n};\n\nconst Jobcard = (props) => {\n  \n  return (\n    <div className=\"card\">\n      {!props.showSkills && (\n        <button className=\"delete is-pulled-right\" onClick={() => props.deleteRecent(props.job.job_uuid)} />\n      )}\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <span className=\"icon is-large\">\n              <i className=\"fa fa-user-tie fa-3x\" />\n            </span>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-5\">{props.job.job_title}</p>\n            <p className=\"subtitle is-6\">\n              {moment(props.job.date).format(\"DD-MM-YYYY HH:mm:ss\")}\n            </p>\n          </div>\n        </div>\n        {props.showSkills && (\n          <div className=\"content\">\n            <hr />\n            <p>Skills required: </p>\n            {skillTags(props.job.skills)}\n            <button className=\"button is-info is-pulled-right is-inverted\">\n              Detail\n              </button>\n            &nbsp;\n            </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteRecent: item => dispatch({ type: \"DELETE\", value: item })\n  };\n};\n\nexport default connect(null,mapDispatchToProps)(Jobcard);\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\n\nimport \"./Searchbar.scss\";\n\nexport class Searchbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      activeSuggestion: 0,\n      showSuggestions: false,\n      suggestions: {}\n    };\n  }\n\n  clearSearch = () => {\n    this.setState({\n      search: \"\",\n      suggestions: {}\n    });\n  };\n\n  onChange = async e => {\n    const value = e.target.value;\n    const name = e.target.name;\n\n    await this.setState({\n      [name]: value,\n      suggestions: {}\n    });\n    this.autocomplete();\n  };\n\n  autocomplete = async () => {\n    const { search } = this.state;\n\n    if (search === \"\" || search.length < 2) {\n      return;\n    }\n\n    const res = await Axios(\n      `http://api.dataatwork.org/v1/jobs/autocomplete?begins_with=${search}`\n    );\n\n    if (res.data.length > 0) {\n      this.setState({\n        suggestions: res.data,\n        showSuggestions: true\n      });\n    }\n  };\n\n  onKeyDown = e => {\n    const { activeSuggestion, suggestions } = this.state;\n\n    if (e.keyCode === 13) {\n      this.selectSuggestion(Object.values(suggestions)[activeSuggestion]);\n    } else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return;\n      }\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\n    } else if (e.keyCode === 40) {\n      if (activeSuggestion - 1 === Object.values(suggestions).length) {\n        return;\n      }\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\n    }\n  };\n\n  suggestionList = () => {\n    const {\n      suggestions,\n      search,\n      activeSuggestion,\n      showSuggestions\n    } = this.state;\n    if (!Object.values(suggestions).length === 0 || !showSuggestions) {\n      return;\n    }\n    return (\n      <div id=\"autocomplete-list\" className=\"autocomplete-items\">\n        {Object.values(suggestions).map((suggestion, key) => {\n          return (\n            <div\n              key={suggestion.uuid}\n              onClick={() => {\n                this.selectSuggestion(suggestion);\n              }}\n              className={\n                key === activeSuggestion\n                  ? \"autocomplete-active\"\n                  : \"has-text-grey\"\n              }\n            >\n              <strong>{suggestion.suggestion.substr(0, search.length)}</strong>\n              {suggestion.suggestion.substr(search.length)}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  selectSuggestion = async suggestion => {\n    this.setState({\n      suggestions: {},\n      search: suggestion.suggestion,\n      activeSuggestion: 0\n    });\n    const res = await Axios(\n      `http://api.dataatwork.org/v1/jobs/${suggestion.uuid}/related_skills`\n    );\n    console.log(\"JOB\", res.data);\n    const job = { ...res.data, date: moment() };\n    this.props.saveRecent(job);\n  };\n\n  onBlur = () => {\n    setTimeout(() => {\n      this.setState({\n        showSuggestions: false\n      });\n    }, 100);\n  };\n\n  render() {\n    const { search } = this.state;\n    return (\n      <div className=\"field has-addons\">\n        <div className=\"control autocomplete\">\n          <input\n            className=\"input search-input\"\n            type=\"text\"\n            placeholder=\"Search for...\"\n            onClick={this.clearSearch}\n            onChange={this.onChange}\n            value={search}\n            name=\"search\"\n            id=\"search\"\n            autoComplete=\"off\"\n            onKeyDown={this.onKeyDown}\n            onBlur={this.onBlur}\n          />\n          {this.suggestionList()}\n        </div>\n        <div className=\"control\">\n          <button className=\"button is-info\">\n            <span className=\"icon\">\n              <i className=\"fa fa-search\" />\n            </span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveRecent: item => dispatch({ type: \"SAVE\", value: item })\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Searchbar);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Jobcard from \"../../components/JobCard/Jobcard\";\nimport Searchbar from \"../../components/Searchbar/Searchbar\";\n\nconst Home = (props) => {\n  const jobs = Object.values(props.recent).reverse();\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <div className=\"is-hidden-desktop\">\n          <div className=\"columns is-centered\">\n            <div className=\"column is-narrow\">\n              <Searchbar />\n            </div>\n          </div>\n        </div>\n        <div className=\"columns\">\n          <div className=\"column is-offset-1 is-5\">\n            {jobs[0] && <Jobcard job={jobs[0]} showSkills />}\n          </div>\n          <div className=\"column is-offset-2 is-4\">\n            {jobs.length > 0 && <p>Recent Jobs</p>}\n            {jobs.length > 0 &&\n              jobs.map(item => {\n                return <Jobcard key={item.job_uuid} job={item} />;\n              })}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    recent: state.recent\n  };\n};\n\nexport default connect(mapStateToProps)(Home);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport \"./Navbar.scss\";\nimport Searchbar from \"../Searchbar/Searchbar\";\n\nconst Navbar = () => {\n  return (\n    <nav\n      className=\"navbar is-dark\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"navbar-brand\">\n        <a className=\"navbar-item\" href=\"/\">\n          <h3 className=\"title is-6 has-text-white\">\n            Via Work\n              <span className=\"icon\">\n              <i className=\"fa fa-bars\" />\n            </span>\n          </h3>\n        </a>\n\n        <a className=\"navbar-item is-hidden-desktop\">\n          <span className=\"icon badge is-badge-danger\" data-badge=\"9+\">\n            <i className=\"fa fa-bell\" />\n          </span>\n        </a>\n        <a className=\"navbar-item is-hidden-desktop\">\n          <span className=\"icon badge is-badge-danger\" data-badge=\"8\">\n            <i className=\"fa fa-envelope\" />\n          </span>\n        </a>\n        <a className=\"navbar-item is-hidden-desktop\">\n          <span className=\"icon\">\n            <i className=\"fa fa-user-circle\" />\n          </span>\n        </a>\n      </div>\n\n      <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <Searchbar />\n          </div>\n          <a className=\"navbar-item\">\n            <span className=\"icon badge is-badge-danger\" data-badge=\"9+\">\n              <i className=\"fa fa-bell\" />\n            </span>\n          </a>\n          <a className=\"navbar-item \">\n            <span className=\"icon badge is-badge-danger\" data-badge=\"8\">\n              <i className=\"fa fa-envelope\" />\n            </span>\n          </a>\n          <a className=\"navbar-item\">\n            <span className=\"icon\">\n              <i className=\"fa fa-user-circle\" />\n            </span>\n          </a>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar\n\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './styles/main.scss'\nimport Home from './containers/Home/Home'\nimport Navbar from './components/Navbar/Navbar'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Router>\n          <Route exact path='/' component={Home} />\n        </Router>\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  recent: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SAVE\":\n      return {\n        ...state,\n        recent: state.recent.concat(action.value)\n      };\n    case \"DELETE\":\n      return {\n        ...state,\n        recent: state.recent.filter(item => action.value !== item.job_uuid)\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Reducer from \"./store/reducer\";\n\nconst store = createStore(Reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}