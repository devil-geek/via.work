{"version":3,"sources":["components/JobCard/Jobcard.js","containers/Home/Home.js","components/Searchbar/Searchbar.js","components/Navbar/Navbar.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["Jobcard","skillTags","skills","tags","i","push","react_default","a","createElement","key","skill_uuid","className","skill_name","this","props","showSkills","job","job_title","moment","date","format","Component","Home","console","log","recent","jobs","Object","values","length","components_JobCard_Jobcard","reverse","map","item","job_uuid","connect","state","Searchbar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","clearSearch","setState","search","suggestions","onChange","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","_this$setState","value","name","wrap","_context","prev","next","target","defineProperty","autocomplete","stop","_x","apply","arguments","_callee2","res","_context2","abrupt","Axios","concat","sent","data","showSuggestions","onKeyDown","_this$state","activeSuggestion","keyCode","selectSuggestion","suggestionList","_this$state2","id","suggestion","uuid","onClick","substr","_ref3","_callee3","_context3","objectSpread","saveRecent","_x2","onBlur","setTimeout","type","placeholder","autoComplete","dispatch","Navbar","role","aria-label","href","aria-expanded","data-target","aria-hidden","components_Searchbar_Searchbar","data-badge","App","components_Navbar_Navbar","HashRouter","Route","exact","path","component","Boolean","window","location","hostname","match","initialState","reducer","undefined","action","store","createStore","Reducer","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ffa772e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport './Jobcard.scss'\n\nclass Jobcard extends Component {\n  skillTags = skills => {\n    const tags = [];\n    for (let i = 0; i < 6; i++) {\n      tags.push(\n        <span key={skills[i].skill_uuid} className=\"tag is-info is-capitalized\">\n          {skills[i].skill_name}\n        </span>\n      );\n    }\n    return <div className=\"tags\">{tags}</div>;\n  };\n\n  render() {\n    return (\n      <div className=\"card\">\n        {!this.props.showSkills && (\n          <button className=\"delete is-pulled-right\" />\n        )}\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <span className=\"icon is-large\">\n                <i className=\"fa fa-user-tie fa-3x\" />\n              </span>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-5\">{this.props.job.job_title}</p>\n              <p className=\"subtitle is-6\">\n                {moment(this.props.job.date).format(\"DD-MM-YYYY HH:mm:ss\")}\n              </p>\n            </div>\n          </div>\n          {this.props.showSkills && (\n            <div className=\"content\">\n              <hr />\n              <p>Skills required: </p>\n              {this.skillTags(this.props.job.skills)}\n              <button className=\"button is-info is-pulled-right is-inverted\">\n                Detail\n              </button>\n              &nbsp;\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Jobcard;\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Jobcard from '../../components/JobCard/Jobcard'\n\nclass Home extends Component {\n  render () {\n    console.log(this.props.recent)\n    const jobs = Object.values(this.props.recent)\n    return (\n      <section className='section'>\n        <div className='container'>\n        <div className='columns'>\n            <div className='column is-5'>\n              {jobs[jobs.length - 1] && \n                <Jobcard job={jobs[jobs.length - 1]} showSkills />\n              }\n            </div>\n          <div className='column is-offset-3 is-4'>\n              {jobs.length > 1 && jobs.reverse().map(item => {\n                return (\n                  <Jobcard key={item.job_uuid}  job={item}/>\n                )\n              })}\n          </div>\n        </div>\n          \n        </div>\n      </section>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    recent: state.recent\n  }\n}\n\nexport default connect(mapStateToProps)(Home)","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport moment from 'moment'\n\nimport \"./Searchbar.scss\";\n\nclass Searchbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      activeSuggestion: 0,\n      showSuggestions: false,\n      suggestions: {}\n    };\n  }\n\n  clearSearch = () => {\n    this.setState({\n      search: \"\",\n      suggestions: {}\n    });\n  };\n\n  onChange = async e => {\n    const value = e.target.value;\n    const name = e.target.name;\n\n    await this.setState({\n      [name]: value,\n      suggestions: {}\n    });\n    this.autocomplete();\n  };\n\n  autocomplete = async () => {\n    const { search } = this.state;\n\n    if (search === \"\") {\n      return;\n    }\n\n    const res = await Axios(\n      `http://api.dataatwork.org/v1/jobs/autocomplete?begins_with=${search}`\n    );\n\n    if (res.data.length > 0) {\n      this.setState({\n        suggestions: res.data,\n        showSuggestions: true\n      });\n    }\n  };\n\n  onKeyDown = e => {\n    const { activeSuggestion, suggestions } = this.state;\n\n    if (e.keyCode === 13) {\n      this.selectSuggestion(Object.values(suggestions)[activeSuggestion]);\n    } else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return;\n      }\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\n    } else if (e.keyCode === 40) {\n      if (activeSuggestion - 1 === Object.values(suggestions).length) {\n        return;\n      }\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\n    }\n  };\n\n  suggestionList = () => {\n    const {\n      suggestions,\n      search,\n      activeSuggestion,\n      showSuggestions\n    } = this.state;\n    if (!Object.values(suggestions).length === 0 || !showSuggestions) {\n      return;\n    }\n    return (\n      <div id=\"autocomplete-list\" className=\"autocomplete-items\">\n        {Object.values(suggestions).map((suggestion, key) => {\n          return (\n            <div\n              key={suggestion.uuid}\n              onClick={() => {\n                this.selectSuggestion(suggestion);\n              }}\n              className={\n                key === activeSuggestion\n                  ? \"autocomplete-active\"\n                  : \"has-text-grey\"\n              }\n            >\n              <strong>{suggestion.suggestion.substr(0, search.length)}</strong>\n              {suggestion.suggestion.substr(search.length)}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  selectSuggestion = async suggestion => {\n    this.setState({\n      suggestions: {},\n      search: suggestion.suggestion,\n      activeSuggestion: 0\n    });\n    const res = await Axios(\n      `http://api.dataatwork.org/v1/jobs/${suggestion.uuid}/related_skills`\n    );\n    console.log(\"JOB\", res.data);\n    const job = {...res.data, date: moment()}\n    this.props.saveRecent(job)\n  };\n\n  onBlur = () => {\n    setTimeout(() => {\n      this.setState({\n        showSuggestions: false\n      });\n    }, 100);\n  };\n\n  render() {\n    const { search } = this.state;\n    return (\n      <div className=\"field has-addons\">\n        <div className=\"control autocomplete\">\n          <input\n            className=\"input search-input\"\n            type=\"text\"\n            placeholder=\"Search for...\"\n            onClick={this.clearSearch}\n            onChange={this.onChange}\n            value={search}\n            name=\"search\"\n            id=\"search\"\n            autoComplete=\"off\"\n            onKeyDown={this.onKeyDown}\n            onBlur={this.onBlur}\n          />\n          {this.suggestionList()}\n        </div>\n        <div className=\"control\">\n          <button className=\"button is-info\">\n            <span className=\"icon\">\n              <i className=\"fa fa-search\" />\n            </span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveRecent: (item) => dispatch({ type: \"SAVE\", value: item })\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Searchbar);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from \"react\";\nimport \"./Navbar.scss\";\nimport Searchbar from '../Searchbar/Searchbar'\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav\n        className=\"navbar is-dark\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <h3 className=\"title is-6 has-text-white\">\n              Via Work\n              <span className=\"icon\">\n                <i className=\"fa fa-bars\" />\n              </span>\n            </h3>\n          </a>\n\n          <a\n            role=\"button\"\n            className=\"navbar-burger burger\"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbarBasicExample\"\n          >\n            <span aria-hidden=\"true\" />\n            <span aria-hidden=\"true\" />\n            <span aria-hidden=\"true\" />\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <Searchbar />\n            </div>\n            <a className=\"navbar-item\">\n              <span className=\"icon badge is-badge-danger\" data-badge=\"9+\">\n                <i className=\"fa fa-bell\" />\n              </span>\n            </a>\n            <a className=\"navbar-item \">\n              <span className=\"icon badge is-badge-danger\" data-badge=\"8\">\n                <i className=\"fa fa-envelope\" />\n              </span>\n            </a>\n            <a className=\"navbar-item\">\n              <span className=\"icon\">\n                <i className=\"fa fa-user-circle\" />\n              </span>\n            </a>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport \"./styles/main.scss\";\nimport Home from \"./containers/Home/Home\";\nimport Navbar from \"./components/Navbar/Navbar\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Router>\n          <Route exact path=\"/\" component={Home} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  recent: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SAVE\":\n      return {\n        recent: state.recent.concat(action.value)\n      };\n    default:\n      return state  \n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Reducer from \"./store/reducer\";\n\nconst store = createStore(Reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}